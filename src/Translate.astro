---
interface Props {
	key: string;
	defaultLang: string;
	lmap: Object;
}

const { key, defaultLang = null, lmap = {} } = Astro.props as Props;

var translations = [];

Object.entries(lmap).forEach((entry) => {
	const [lang, items] = entry;

	var label = key;

	if (items[key]) {
		label = items[key];
	}

	translations.push({
		lang: lang,
		label: label
	});
});
---

{translations && translations.length ? translations.map(({ lang, label }) => <span lang={lang}>{label}</span>) : <span>{key}</span>}

<style is:global lang="scss">
	html[lang] [lang] {
		display: none;
	}

	html[lang="en"] [lang="en"],
	html[lang="it"] [lang="it"],
	html[lang="fr"] [lang="fr"],
	html[lang="de"] [lang="de"],
	html[lang="ru"] [lang="ru"],
	html[lang="af"] [lang="af"],
	html[lang="cs"] [lang="cs"],
	html[lang="zh"] [lang="zh"],
	html[lang="nl"] [lang="nl"],
	html[lang="ro"] [lang="ro"],
	html[lang="sv"] [lang="sv"],
	html[lang="bg"] [lang="bg"],
	html[lang="es"] [lang="es"] {
		display: unset;
	}
</style>
